{"ast":null,"code":"var _jsxFileName = \"/Users/mustafaabdalla/My-blog/src/components/NavBar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport 'n.css'; // Create this CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NavBar() {\n  _s();\n  const [darkMode, setDarkMode] = useState(() => {\n    // Check user's preferred color scheme or previously saved preference\n    return localStorage.getItem('darkMode') === 'true' || window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;\n  });\n\n  // Apply theme to entire page\n  useEffect(() => {\n    if (darkMode) {\n      document.documentElement.classList.add('dark-theme');\n      document.documentElement.classList.remove('light-theme');\n    } else {\n      document.documentElement.classList.add('light-theme');\n      document.documentElement.classList.remove('dark-theme');\n    }\n    localStorage.setItem('darkMode', darkMode);\n  }, [darkMode]);\n  const toggleTheme = () => {\n    setDarkMode(!darkMode);\n  };\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"navbar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar-left\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"#\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"zvshh\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar-right\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://github.com\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"GitHub\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://twitter.com\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"Twitter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://instagram.com\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"Instagram\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"theme-toggle\",\n        onClick: toggleTheme,\n        \"aria-label\": darkMode ? 'Switch to light mode' : 'Switch to dark mode',\n        children: darkMode ? '‚òÄÔ∏è' : 'üåô'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(NavBar, \"UqJSh0Q1h7bK+7Y4PMLFlhYHg5g=\");\n_c = NavBar;\nexport default NavBar;\nvar _c;\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","NavBar","_s","darkMode","setDarkMode","localStorage","getItem","window","matchMedia","matches","document","documentElement","classList","add","remove","setItem","toggleTheme","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","href","target","rel","onClick","_c","$RefreshReg$"],"sources":["/Users/mustafaabdalla/My-blog/src/components/NavBar.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport 'n.css'; // Create this CSS file\n\nfunction NavBar() {\n  const [darkMode, setDarkMode] = useState(() => {\n    // Check user's preferred color scheme or previously saved preference\n    return localStorage.getItem('darkMode') === 'true' || \n           (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches);\n  });\n\n  // Apply theme to entire page\n  useEffect(() => {\n    if (darkMode) {\n      document.documentElement.classList.add('dark-theme');\n      document.documentElement.classList.remove('light-theme');\n    } else {\n      document.documentElement.classList.add('light-theme');\n      document.documentElement.classList.remove('dark-theme');\n    }\n    localStorage.setItem('darkMode', darkMode);\n  }, [darkMode]);\n\n  const toggleTheme = () => {\n    setDarkMode(!darkMode);\n  };\n\n  return (\n    <nav className=\"navbar\">\n      {/* Left side - Logo/Brand */}\n      <div className=\"navbar-left\">\n        <img src=\"#\" alt=\"logo\" />\n        <h1>zvshh</h1>\n      </div>\n\n      {/* Right side - Links and buttons */}\n      <div className=\"navbar-right\">\n        <a href=\"https://github.com\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub</a>\n        <a href=\"https://twitter.com\" target=\"_blank\" rel=\"noopener noreferrer\">Twitter</a>\n        <a href=\"https://instagram.com\" target=\"_blank\" rel=\"noopener noreferrer\">Instagram</a>\n        \n        {/* Theme toggle button */}\n        <button \n          className=\"theme-toggle\" \n          onClick={toggleTheme}\n          aria-label={darkMode ? 'Switch to light mode' : 'Switch to dark mode'}\n        >\n          {darkMode ? '‚òÄÔ∏è' : 'üåô'}\n        </button>\n      </div>\n    </nav>\n  );\n}\n\nexport default NavBar;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}